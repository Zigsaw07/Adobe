# Define the Google Drive folder ID
$googleDriveFolderId = "https://drive.google.com/file/d/1sUzJKWATRyASNCiSqlSkVVq4_jrkEYwE/view?usp=drive_link"

# Define the path to save the downloaded folder in the temp directory
$localFolderPath = Join-Path $env:TEMP "DownloadedFolder"

# Function to log messages
function Log-Message {
    param (
        [string]$message
    )
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    Write-Output "$timestamp - $message"
}

# Function to download the folder
function Download-Folder {
    param (
        [string]$folderId,
        [string]$outputPath
    )

    try {
        Log-Message "Starting download of folder with ID $folderId..."
        & gdrive download --path $outputPath --recursive $folderId -ErrorAction Stop
        Log-Message "Folder downloaded successfully to $outputPath."
    } catch {
        Log-Message "Error downloading folder: $_"
        throw $_
    }
}

# Function to install the downloaded EXE file
function Install-File {
    param (
        [string]$filePath
    )

    try {
        Log-Message "Starting installation of $filePath with admin privileges..."
        Start-Process -FilePath $filePath -ArgumentList "/S" -Wait -NoNewWindow -Verb RunAs -ErrorAction Stop
        Log-Message "Installation completed successfully."
    } catch {
        Log-Message "Error during installation: $_"
        throw $_
    }
}

# Main script execution
try {
    # Ensure the output directory exists
    if (-Not (Test-Path $localFolderPath)) {
        New-Item -ItemType Directory -Path $localFolderPath | Out-Null
    }

    # Download the folder
    Download-Folder -folderId $googleDriveFolderId -outputPath $localFolderPath

    # Define the path to the EXE file within the downloaded folder
    $exeFilePath = Join-Path $localFolderPath "installer.exe"

    # Check if the EXE file exists
    if (Test-Path $exeFilePath) {
        # Install the file
        Install-File -filePath $exeFilePath
    } else {
        Log-Message "EXE file not found in the downloaded folder."
        throw "EXE file not found."
    }
} catch {
    Log-Message "Script failed: $_"
    exit 1
} finally {
    # Pause to keep the PowerShell window open
    Read-Host -Prompt "Press Enter to exit"
}
